ARG UBUNTU_CODENAME
# load from ubuntu image:
#FROM ubuntu:$UBUNTU_CODENAME
FROM nvidia/cuda:10.2-devel-ubuntu18.04
# first upgrade and start from a clean image:
RUN apt-get update -y &&  apt-get upgrade -y && apt-get dist-upgrade -y 
# install the basics:
RUN apt-get install -y --no-install-recommends \
  build-essential                              \
  libpam0g-dev                                 \
  python-minimal                               \
	python-apt                                   \
  python-setuptools                            \
  python3-mysqldb                              \
  ruby-dev                                     \
  wget vim libssl-dev libncurses5-dev liblz4-1                     
# install the DB development libraries so that we can compile storage_mysql:
RUN apt-get install -y libmunge-dev libmariadb-dev 
# install the dependencies for PMIx:
RUN apt-get install -y --no-install-recommends \
	hwloc libnuma1 libhwloc-dev                  \
	libevent-dev                                 \
	zlibc zlib1g-dev zlib1g                      \
	&& rm -rf /var/lib/apt/lists/*
# install fpm for packaging:
RUN gem install --no-document fpm
# create the dist directory:
RUN mkdir -p /dist
# create the directory of the temporary slurm and pmix build:
RUN mkdir -p /workdir/pmix/build
RUN mkdir -p /workdir/slurm/build
ARG UBUNTU_CODENAME
# get PMIx sources:
ARG PMIX_VERSION
WORKDIR /workdir/pmix
RUN wget -q -O pmix.tar.gz "https://github.com/openpmix/openpmix/releases/download/v${PMIX_VERSION}/pmix-${PMIX_VERSION}.tar.gz"
# untar and build pmix:
WORKDIR /workdir/pmix/sources
RUN tar xzvf ../pmix.tar.gz --strip-components=1
RUN ./configure --prefix=/usr                                 \ 
                --with-hwloc=/usr                             \
                --with-libevent=/usr
RUN make -j         > pmix_build.log 
RUN make DESTDIR=/workdir/pmix/build install -j > pmix_install.log
RUN cp /workdir/pmix/sources/config.log /dist/pmix_config.log
RUN cp /workdir/pmix/sources/pmix_build.log   /dist/
RUN cp /workdir/pmix/sources/pmix_install.log /dist/
# package PMIx:
WORKDIR /workdir
RUN fpm -s dir -t deb -v "${PMIX_VERSION}-${UBUNTU_CODENAME}" -n pmix -C /workdir/pmix/build .
# install PMIx to use it later for slurm:
RUN dpkg -i  "pmix_${PMIX_VERSION}-${UBUNTU_CODENAME}_amd64.deb"

# get slurm sources:
ARG SLURM_VERSION
WORKDIR /workdir/slurm
RUN wget -q -O slurm.tar.bz2 "https://download.schedmd.com/slurm/slurm-${SLURM_VERSION}.tar.bz2"
# untar and build slurm:
WORKDIR /workdir/slurm/sources
RUN tar xjf ../slurm.tar.bz2 --strip-components=1
RUN ./configure --prefix=/usr                                  \ 
                --sysconfdir=/etc/slurm                        \
                --enable-pam                                   \
                --with-pam_dir=/lib/x86_64-linux-gnu/security/ \
                --with-hwloc=/usr                              \ 
                --with-pmix=/usr                               \ 
                --with-munge --without-rpath                   \
		--without-shared-libslurm
RUN ./configure --help >> config.log
RUN make -j         > slurm_build.log 
RUN make contrib -j > slurm_contrib.log
RUN make DESTDIR=/workdir/slurm/build install > slurm_install.log
# copy logs to the dist directory: 
RUN cp /workdir/slurm/sources/config.log        /dist/slurm_config.log
RUN cp /workdir/slurm/sources/slurm_build.log   /dist/
RUN cp /workdir/slurm/sources/slurm_contrib.log /dist/
RUN cp /workdir/slurm/sources/slurm_install.log /dist/
# package Slurm:
WORKDIR /workdir
RUN fpm -s dir -t deb -v "${SLURM_VERSION}-${UBUNTU_CODENAME}" -n slurm -C /workdir/slurm/build .
# copy the deb packages to /dist/:
RUN cp *.deb /dist/
